# üìå –î–æ—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–¥–∞—á—É 4.
# üìå –î–æ–±–∞–≤—å—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–ø—É—Å–∫–∞ –∏–∑ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏.
# üìå –ü—Ä–∏ —ç—Ç–æ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ª—é–±–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –º–æ–∂–Ω–æ –æ–ø—É—Å—Ç–∏—Ç—å. –í —ç—Ç–æ–º —Å–ª—É—á–∞–µ –±–µ—Ä—ë—Ç—Å—è –ø–µ—Ä–≤—ã–π –≤ –º–µ—Å—è—Ü–µ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏, —Ç–µ–∫—É—â–∏–π
# –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ –∏/–∏–ª–∏ —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü.
# üìå *–ù–∞—É—á–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞—Ç—å –Ω–µ —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏—è –¥–Ω—è –Ω–µ–¥–µ–ª–∏ –∏ –º–µ—Å—è—Ü–∞, –Ω–æ –∏ —á–∏—Å–ª–æ–≤—ã–µ,
# —Ç.–µ –Ω–µ –º–∞—è, –∞ 5.
import sys
from datetime import datetime

WEEKDAYS = {
    "–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫": 1,
    "–≤—Ç–æ—Ä–Ω–∏–∫": 2,
    "—Å—Ä–µ–¥–∞": 3,
    "—á–µ—Ç–≤–µ—Ä–≥": 4,
    "–ø—è—Ç–Ω–∏—Ü–∞": 5,
    "—Å—É–±–±–æ—Ç–∞": 6,
    "–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ": 7
}

MONTHS = {
    "—è–Ω–≤–∞—Ä—è": 1,
    "—Ñ–µ–≤—Ä–∞–ª—è": 2,
    "–º–∞—Ä—Ç–∞": 3,
    "–∞–ø—Ä–µ–ª—è": 4,
    "–º–∞—è": 5,
    "–∏—é–Ω—è": 6,
    "–∏—é–ª—è": 7,
    "–∞–≤–≥—É—Å—Ç–∞": 8,
    "—Å–µ–Ω—Ç—è–±—Ä—è": 9,
    "–æ–∫—Ç—è–±—Ä—è": 10,
    "–Ω–æ—è–±—Ä—è": 11,
    "–¥–µ–∫–∞–±—Ä—è": 12
}

def correct_date(text: str) -> datetime:
    week_count, weekday, month = text.split()
    week_count = int(week_count[0])
    weekday = int(WEEKDAYS[weekday])
    month = int(MONTHS[month])
    # print(week_count, weekday, month)

    weeks_passed = 0
    for day in range(1, 31):
        temp_date = datetime (
            datetime.now().year,
            month,
            day
        )
        if temp_date.weekday() + 1 == weekday:
            weeks_passed += 1
            if weeks_passed == week_count:
                return temp_date
    raise ValueError(f"–¢–∞–∫–æ–π –¥–∞—Ç—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: '{text}'")



if __name__ == "__main__":
    # print(correct_date("1-–π —á–µ—Ç–≤–µ—Ä–≥ –Ω–æ—è–±—Ä—è"))
    # print(correct_date("3-—è —Å—Ä–µ–¥–∞ –º–∞—è"))
    # print(correct_date("5-–π —á–µ—Ç–≤–µ—Ä–≥ —è–Ω–≤–∞—Ä—è"))

    path, date, *_ = sys.argv
    print(correct_date(date))