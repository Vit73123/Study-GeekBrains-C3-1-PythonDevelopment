# üìå –ù–∞ —Å–µ–º–∏–Ω–∞—Ä–µ 13 –±—ã–ª —Å–æ–∑–¥–∞–Ω –ø—Ä–æ–µ–∫—Ç –ø–æ —Ä–∞–±–æ—Ç–µ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ (–∏–º—è, id, —É—Ä–æ–≤–µ–Ω—å).
# üìå –ù–∞–ø–∏—à–∏—Ç–µ 3-7 —Ç–µ—Å—Ç–æ–≤ pytest –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞.
# üìå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–∏–∫—Å—Ç—É—Ä—ã.
from L13_Sem_t05_project import Project
from L13_Sem_t04_user_module import User
from L13_Sem_t03_t06_exceptions import (ProjectAccessException,
                                        ProjectLevelException)
import pytest


@pytest.fixture
def setUp_add_users():
    p1 = Project()
    p1.auth("vlads", 1000011)
    return p1


@pytest.fixture
def setUp_auth():
    p1 = Project()
    return p1


def test_auth_valid_data(setUp_auth):
    setUp_auth.auth("vlads", 1000011)
    assert setUp_auth.admin == User("vlads", 1000011, None)


def test_auth_invalid_data(setUp_auth):
    with pytest.raises(ProjectAccessException):
        setUp_auth.auth("vlaaafads", 1033100011)


def test_add_valid_user(setUp_add_users):
    setUp_add_users.add_new_user("fajnfgjhan", 181481481, 5)
    assert User("fajnfgjhan", 181481481, 5) in setUp_add_users.users


def test_add_invalid_user(setUp_add_users):
    with pytest.raises(ProjectLevelException):
        setUp_add_users.add_new_user("fajnfgjhan", 181481481, 1)


if __name__ == "__main__":
    pytest.main(verbosity=4)
