# üìå –î–æ—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–ª–∞—Å—Å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ –∏–∑ –ø—Ä–æ—à–ª–æ–≥–æ —Å–µ–º–∏–Ω–∞—Ä–∞.
# üìå –î–æ–±–∞–≤—å—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–ª–æ–∂–µ–Ω–∏—è –∏ –≤—ã—á–∏—Ç–∞–Ω–∏—è.
# üìå –ü—Ä–∏ —ç—Ç–æ–º –¥–æ–ª–∂–µ–Ω —Å–æ–∑–¥–∞–≤–∞—Ç—å—Å—è –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞.
# üìå –°–∫–ª–∞–¥—ã–≤–∞–µ–º –∏ –≤—ã—á–∏—Ç–∞–µ–º –ø–µ—Ä–∏–º–µ—Ç—Ä—ã, –∞ –Ω–µ –¥–ª–∏–Ω–Ω—É –∏ —à–∏—Ä–∏–Ω—É.
# üìå –ü—Ä–∏ –≤—ã—á–∏—Ç–∞–Ω–∏–∏ –Ω–µ –¥–æ–ø—É—Å–∫–∞–π—Ç–µ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π.

class Rectangle:
    def __init__(self, a: float, b: float = None):
        self.a = a
        self.b = b if b else a

    def perimeter(self):
        return 2 * (self.a + self.b)

    def area(self):
        return self.a * self.b

    def __add__(self, other: 'Rectangle'):
        new_perimeter = self.perimeter() + other.perimeter()
        new_a = self.a + other.a
        new_b = new_perimeter / 2 - new_a
        if new_a <= 0 or new_b <= 0:
            raise ValueError
        return Rectangle(new_a, new_b)

    def __sub__(self, other: 'Rectangle'):
        new_perimeter = self.perimeter() - other.perimeter()
        new_a = self.a - other.a
        new_b = new_perimeter / 2 - new_a
        if new_a <= 0 or new_b <= 0:
            raise ValueError
        return Rectangle(new_a, new_b)

    def __eq__(self, other: ' Rectangle'):
        return self.area() == other.area()

    def __gt__(self, other: 'Rectangle'):
        return self.area() > other.area()

    def __lt__(self, other: 'Rectangle'):
        return self.area() < other.area()

    def __repr__(self):
        return f'Rectangle({self.a}, {self.b})'


if __name__ == '__main__':
    r1 = Rectangle(2, 2)
    r2 = Rectangle(4, 2)
    print(r1 < r2)
    print(r1 > r2)
    print(r1 == r2)
    print(r1 != r2)
    print(r1 + r2)
    print(r2 - r1)    # ValueError: new_b = 0
